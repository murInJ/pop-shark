// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.1
// source: pop_shark.proto

package pop_shark

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=Ip,proto3" json:"Ip,omitempty"`
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_shark_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pop_shark_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_pop_shark_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type ResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip            string `protobuf:"bytes,1,opt,name=Ip,proto3" json:"Ip,omitempty"`
	CurrentPlayer int64  `protobuf:"varint,2,opt,name=CurrentPlayer,proto3" json:"CurrentPlayer,omitempty"`
}

func (x *ResetRequest) Reset() {
	*x = ResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_shark_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetRequest) ProtoMessage() {}

func (x *ResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pop_shark_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetRequest.ProtoReflect.Descriptor instead.
func (*ResetRequest) Descriptor() ([]byte, []int) {
	return file_pop_shark_proto_rawDescGZIP(), []int{1}
}

func (x *ResetRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ResetRequest) GetCurrentPlayer() int64 {
	if x != nil {
		return x.CurrentPlayer
	}
	return 0
}

type StepRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip       string `protobuf:"bytes,1,opt,name=Ip,proto3" json:"Ip,omitempty"`
	Start    int64  `protobuf:"varint,2,opt,name=Start,proto3" json:"Start,omitempty"`
	End      int64  `protobuf:"varint,3,opt,name=End,proto3" json:"End,omitempty"`
	Obstacle int64  `protobuf:"varint,4,opt,name=Obstacle,proto3" json:"Obstacle,omitempty"`
}

func (x *StepRequest) Reset() {
	*x = StepRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_shark_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StepRequest) ProtoMessage() {}

func (x *StepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pop_shark_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StepRequest.ProtoReflect.Descriptor instead.
func (*StepRequest) Descriptor() ([]byte, []int) {
	return file_pop_shark_proto_rawDescGZIP(), []int{2}
}

func (x *StepRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *StepRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *StepRequest) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *StepRequest) GetObstacle() int64 {
	if x != nil {
		return x.Obstacle
	}
	return 0
}

type DisconnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip string `protobuf:"bytes,1,opt,name=Ip,proto3" json:"Ip,omitempty"`
}

func (x *DisconnectRequest) Reset() {
	*x = DisconnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_shark_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisconnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectRequest) ProtoMessage() {}

func (x *DisconnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pop_shark_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectRequest.ProtoReflect.Descriptor instead.
func (*DisconnectRequest) Descriptor() ([]byte, []int) {
	return file_pop_shark_proto_rawDescGZIP(), []int{3}
}

func (x *DisconnectRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Info   string `protobuf:"bytes,2,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pop_shark_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_pop_shark_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_pop_shark_proto_rawDescGZIP(), []int{4}
}

func (x *Response) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Response) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_pop_shark_proto protoreflect.FileDescriptor

var file_pop_shark_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x6f, 0x70, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x70, 0x6f, 0x70, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x6b, 0x22, 0x20, 0x0a, 0x0e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x22, 0x44,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x24,
	0x0a, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x0b, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x45, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4f,
	0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4f,
	0x62, 0x73, 0x74, 0x61, 0x63, 0x6c, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x22, 0x36, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x32, 0xf8, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x6f, 0x70, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x6b, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x70, 0x6f, 0x70, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x6f,
	0x70, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x6f, 0x70, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x6b,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x53, 0x74, 0x65,
	0x70, 0x12, 0x16, 0x2e, 0x70, 0x6f, 0x70, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x6b, 0x2e, 0x53, 0x74,
	0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x6f, 0x70, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x70,
	0x6f, 0x70, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x6b, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x6f, 0x70,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x6b, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pop_shark_proto_rawDescOnce sync.Once
	file_pop_shark_proto_rawDescData = file_pop_shark_proto_rawDesc
)

func file_pop_shark_proto_rawDescGZIP() []byte {
	file_pop_shark_proto_rawDescOnce.Do(func() {
		file_pop_shark_proto_rawDescData = protoimpl.X.CompressGZIP(file_pop_shark_proto_rawDescData)
	})
	return file_pop_shark_proto_rawDescData
}

var file_pop_shark_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pop_shark_proto_goTypes = []interface{}{
	(*ConnectRequest)(nil),    // 0: pop_shark.ConnectRequest
	(*ResetRequest)(nil),      // 1: pop_shark.ResetRequest
	(*StepRequest)(nil),       // 2: pop_shark.StepRequest
	(*DisconnectRequest)(nil), // 3: pop_shark.DisconnectRequest
	(*Response)(nil),          // 4: pop_shark.Response
}
var file_pop_shark_proto_depIdxs = []int32{
	0, // 0: pop_shark.StringServices.Connect:input_type -> pop_shark.ConnectRequest
	1, // 1: pop_shark.StringServices.Reset:input_type -> pop_shark.ResetRequest
	2, // 2: pop_shark.StringServices.Step:input_type -> pop_shark.StepRequest
	3, // 3: pop_shark.StringServices.Disconnect:input_type -> pop_shark.DisconnectRequest
	4, // 4: pop_shark.StringServices.Connect:output_type -> pop_shark.Response
	4, // 5: pop_shark.StringServices.Reset:output_type -> pop_shark.Response
	4, // 6: pop_shark.StringServices.Step:output_type -> pop_shark.Response
	4, // 7: pop_shark.StringServices.Disconnect:output_type -> pop_shark.Response
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pop_shark_proto_init() }
func file_pop_shark_proto_init() {
	if File_pop_shark_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pop_shark_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pop_shark_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pop_shark_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StepRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pop_shark_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisconnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pop_shark_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pop_shark_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pop_shark_proto_goTypes,
		DependencyIndexes: file_pop_shark_proto_depIdxs,
		MessageInfos:      file_pop_shark_proto_msgTypes,
	}.Build()
	File_pop_shark_proto = out.File
	file_pop_shark_proto_rawDesc = nil
	file_pop_shark_proto_goTypes = nil
	file_pop_shark_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StringServicesClient is the client API for StringServices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StringServicesClient interface {
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*Response, error)
	Reset(ctx context.Context, in *ResetRequest, opts ...grpc.CallOption) (*Response, error)
	Step(ctx context.Context, in *StepRequest, opts ...grpc.CallOption) (*Response, error)
	Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*Response, error)
}

type stringServicesClient struct {
	cc grpc.ClientConnInterface
}

func NewStringServicesClient(cc grpc.ClientConnInterface) StringServicesClient {
	return &stringServicesClient{cc}
}

func (c *stringServicesClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pop_shark.StringServices/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stringServicesClient) Reset(ctx context.Context, in *ResetRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pop_shark.StringServices/Reset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stringServicesClient) Step(ctx context.Context, in *StepRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pop_shark.StringServices/Step", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *stringServicesClient) Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pop_shark.StringServices/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StringServicesServer is the server API for StringServices service.
type StringServicesServer interface {
	Connect(context.Context, *ConnectRequest) (*Response, error)
	Reset(context.Context, *ResetRequest) (*Response, error)
	Step(context.Context, *StepRequest) (*Response, error)
	Disconnect(context.Context, *DisconnectRequest) (*Response, error)
}

// UnimplementedStringServicesServer can be embedded to have forward compatible implementations.
type UnimplementedStringServicesServer struct {
}

func (*UnimplementedStringServicesServer) Connect(context.Context, *ConnectRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedStringServicesServer) Reset(context.Context, *ResetRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reset not implemented")
}
func (*UnimplementedStringServicesServer) Step(context.Context, *StepRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Step not implemented")
}
func (*UnimplementedStringServicesServer) Disconnect(context.Context, *DisconnectRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disconnect not implemented")
}

func RegisterStringServicesServer(s *grpc.Server, srv StringServicesServer) {
	s.RegisterService(&_StringServices_serviceDesc, srv)
}

func _StringServices_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StringServicesServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pop_shark.StringServices/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StringServicesServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StringServices_Reset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StringServicesServer).Reset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pop_shark.StringServices/Reset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StringServicesServer).Reset(ctx, req.(*ResetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StringServices_Step_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StepRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StringServicesServer).Step(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pop_shark.StringServices/Step",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StringServicesServer).Step(ctx, req.(*StepRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StringServices_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StringServicesServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pop_shark.StringServices/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StringServicesServer).Disconnect(ctx, req.(*DisconnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StringServices_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pop_shark.StringServices",
	HandlerType: (*StringServicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _StringServices_Connect_Handler,
		},
		{
			MethodName: "Reset",
			Handler:    _StringServices_Reset_Handler,
		},
		{
			MethodName: "Step",
			Handler:    _StringServices_Step_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _StringServices_Disconnect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pop_shark.proto",
}
